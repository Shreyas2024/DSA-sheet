Approach : 
Sort the given Array
Compare the end value of current vector and start value of next vector
if curr val is greater than next start val update curr end val as maximum of curr val end and next val end

vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end());
        vector<vector<int>> ans;
        ans.push_back(intervals[0]);
        for(int i=1;i<intervals.size();i++){
            cout<<"Ans Vec : ";
            cout<<ans.back()[0]<<" "<<ans.back()[1]<<endl;
            cout<<"Given Vec : ";
            cout<<intervals[i][0]<<" "<<intervals[i][1]<<endl;
            if(ans.back()[1]>=intervals[i][0]){
                ans.back()[1] = max(ans.back()[1],intervals[i][1]);
            }
            else ans.push_back(intervals[i]);
        }
        return ans;
    }
